#!/usr/bin/perl

use Kla;
use Getopt::Long;
use Pod::Usage;
#use Curses; -- need to hide passwords...

my $action;
my $user;
my @groups=();
my $pw;
my $help;
my $firstname;
my $lastname;
my @accessto=();
my @member=();

my $kla = Kla->new;

$result = GetOptions("action|a=s"	=> \$action,
		     "user|u=s"		=> \$user,
		     "group|g=s"	=> \@groups,
		     "password|p=s"	=> \$pw,
		     "firstname=s"	=> \$firstname,
		     "lastname=s"	=> \$lastname,
		     "trustmode=s"	=> \$trustmode,
		     "accessto=s"	=> \@accessto,
		     "member=s"		=> \@members,
		     "help|h"		=> \$help);

=pod

=head1 NAME

kla - Kerberos Ldap Admin, command line

=head1 SYNOPSIS

kla -a adduser -u <username> -g group1 -g group2 -g group3 [ --firstname firstname --lastname lastname --trustmode (fullaccess|hostbased) --accessto hostname1 [ --accessto hostname2 ...] --password s3cr1t ]

kla --action addgroup --group <groupname> --member <member1> [ --member <member2> ... ]

kla --action password [ --user <username> --password h4x0r3d ]

kla --action deluser [ --user <username> ]

kla --action delgroup [ --group <groupname> [ --group <groupname> ... ] ]

kla -a addmember [ --group <groupname> --member <member> [ --member <member> ...] ]

=cut

if($help) {
	pod2usage(0);
}

if(!defined($action)) {
	pod2usage(1);
}

if($action eq "adduser") {
	if(!defined($user)) {
		die "Need a username\n";
	}

	$kla->bind();

	$kla->createuser($user, sub { 
			my $p = shift;
			print "$p: ";
			$_=<STDIN>;
			chomp;
			return $_;
		}, sub {
			my $e = shift;
			print STDERR "$e\n";
		}
	);
} elsif($action eq "addgroup") {
	my %hash;
} else {
	die "Invalid action\n";
}
